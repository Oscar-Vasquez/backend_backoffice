import { CreateBranchDto, UpdateBranchDto } from './dto/branch.dto';
import { PrismaService } from '../prisma/prisma.service';
export declare class BranchesService {
    private readonly prisma;
    constructor(prisma: PrismaService);
    create(createBranchDto: CreateBranchDto): Promise<{
        email: string | null;
        id: string;
        created_at: Date;
        updated_at: Date | null;
        phone: string | null;
        address: string | null;
        name: string;
        province: string | null;
        city: string | null;
        postal_code: string | null;
        is_active: boolean | null;
        prefix: string | null;
        company_id: string;
        manager_name: string | null;
        opening_hours: import("@prisma/client/runtime/library").JsonValue | null;
        timezone: string | null;
    }>;
    findAll(): Promise<{
        email: string | null;
        id: string;
        created_at: Date;
        updated_at: Date | null;
        phone: string | null;
        address: string | null;
        name: string;
        province: string | null;
        city: string | null;
        postal_code: string | null;
        is_active: boolean | null;
        prefix: string | null;
        company_id: string;
        manager_name: string | null;
        opening_hours: import("@prisma/client/runtime/library").JsonValue | null;
        timezone: string | null;
    }[]>;
    findOne(id: string): Promise<{
        operators: {
            email: string;
            password: string;
            id: string;
            created_at: Date;
            updated_at: Date | null;
            first_name: string;
            last_name: string;
            phone: string | null;
            photo: string | null;
            role: import(".prisma/client").$Enums.operator_role_enum;
            status: import(".prisma/client").$Enums.operator_status_enum;
            last_login_at: Date | null;
            branch_id: string;
            type_operator_id: string;
            position: string | null;
            hire_date: Date | null;
            birth_date: Date | null;
            emergency_contact: import("@prisma/client/runtime/library").JsonValue | null;
            skills: string[];
            personal_id: string | null;
            address: string | null;
        }[];
        vehicles: {
            id: string;
            created_at: Date;
            updated_at: Date | null;
            status: string;
            branch_id: string | null;
            color: string | null;
            make: string;
            model: string;
            year: number | null;
            license_plate: string;
            vin: string | null;
            purchase_date: Date | null;
            last_maintenance_date: Date | null;
            mileage: number | null;
            fuel_type: string | null;
            insurance_info: import("@prisma/client/runtime/library").JsonValue | null;
            technical_specs: import("@prisma/client/runtime/library").JsonValue | null;
        }[];
    } & {
        email: string | null;
        id: string;
        created_at: Date;
        updated_at: Date | null;
        phone: string | null;
        address: string | null;
        name: string;
        province: string | null;
        city: string | null;
        postal_code: string | null;
        is_active: boolean | null;
        prefix: string | null;
        company_id: string;
        manager_name: string | null;
        opening_hours: import("@prisma/client/runtime/library").JsonValue | null;
        timezone: string | null;
    }>;
    update(id: string, updateBranchDto: UpdateBranchDto): Promise<{
        email: string | null;
        id: string;
        created_at: Date;
        updated_at: Date | null;
        phone: string | null;
        address: string | null;
        name: string;
        province: string | null;
        city: string | null;
        postal_code: string | null;
        is_active: boolean | null;
        prefix: string | null;
        company_id: string;
        manager_name: string | null;
        opening_hours: import("@prisma/client/runtime/library").JsonValue | null;
        timezone: string | null;
    }>;
    remove(id: string): Promise<{
        message: string;
    }>;
}
