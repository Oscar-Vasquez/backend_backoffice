FROM node:18-alpine

WORKDIR /app

# Configurar variables de entorno
ENV NODE_OPTIONS="--max-old-space-size=2048"
ENV PORT=3000
ENV NODE_ENV=production

# Crear un .npmrc básico
RUN echo "legacy-peer-deps=true" > .npmrc

# Crear polyfill para crypto
COPY polyfills.js ./
COPY multer.d.ts ./

# Instalar dependencias para compilación
RUN apk add --no-cache python3 make g++ git

# Copiar package.json y prisma
COPY package.json ./
COPY prisma ./prisma/

# Instalar solo las dependencias principales con fuerza
RUN npm install --only=prod --legacy-peer-deps --force

# Instalar NestJS CLI globalmente
RUN npm install -g @nestjs/cli

# Instalar tipos necesarios
RUN npm install --save-dev @types/express@4 @types/multer@1.4.12

# Reconstruir bcrypt específicamente
RUN npm rebuild bcrypt --build-from-source

# Generar el cliente Prisma
RUN npx prisma generate --schema=./prisma/schema.prisma

# Copiar el resto del código
COPY . .

# Asegurar que tenemos la definición de tipos
RUN mkdir -p src/@types/express
COPY multer.d.ts src/@types/express/index.d.ts

# Compilar la aplicación (con skipCheck para ignorar errores de tipo)
RUN nest build --skipCheck

# Exponer puerto - importante para Railway
EXPOSE 3000

# Iniciar la aplicación
CMD ["node", "--max-old-space-size=2048", "dist/main.js"] 